{"creationTimeStamp":"2024-03-08T02:04:58.950Z","modifiedTimeStamp":"2024-03-09T00:24:34.896Z","createdBy":"samiul","modifiedBy":"samiul","name":"RAG - Document Q&A.step","displayName":"RAG - Document Q&A.step","localDisplayName":"RAG - Document Q&A.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","uri":"/dataFlows/steps/574c93d2-e027-4e01-9063-5b81704efb34","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Source files (your answer bank)\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"folder_or_file_selector\",\n\t\t\t\t\t\t\t\"type\": \"radiogroup\",\n\t\t\t\t\t\t\t\"label\": \"Select an entire folder or a specific file to query:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"folder\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Select a Folder\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"file\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Select a File\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Note: The file or folder should be located on the filesystem.  \",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"answerBankFile\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Select a file:\",\n\t\t\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$folder_or_file_selector\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"file\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\t\t\"$folder_or_file_selector\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"file\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"answerBankFolder\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Select a folder:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$folder_or_file_selector\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"folder\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"enabled\": [\n\t\t\t\t\t\t\t\t\"$folder_or_file_selector\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"folder\"\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section4\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Question\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"questionText\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Type your question below:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Configuration\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"embedding_model\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Embedding model\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"embeddingModel\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Select embedding model:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"text-embedding-ada-002\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"text-embedding-3-small\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"text-embedding-3-large\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section2\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Vector store (Chroma)\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"persistentPathName\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Provide a path to the vector store's persistent location:\",\n\t\t\t\t\t\t\t\"pathtype\": \"folder\",\n\t\t\t\t\t\t\t\"placeholder\": \"sasserver:/tmp\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"collectionName\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Provide name for vector store collection:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"$persistentPathName\",\n\t\t\t\t\t\t\t\"enabled\": \"$persistentPathName\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section3\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Text generation model\",\n\t\t\t\t\t\"open\": false,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"genModel\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Select generation model:\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"gpt-35-turbo\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"gpt-35-turbo-16k\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"gpt-35-turbo-instruct\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"gpt-4\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section5\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Azure OpenAI service\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"azureKeyLocation\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Provide path to your Azure OpenAI key:\",\n\t\t\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Ensure this key is located in a file saved in a secure folder.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"azureOpenAIEndpoint\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Provide URL for Azure OpenAI service endpoint:\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"azureRegion\",\n\t\t\t\t\t\t\t\"type\": \"textfield\",\n\t\t\t\t\t\t\t\"label\": \"Provide region for Azure OpenAI service\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About WIP\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"RAG - Doc Q&A\\n==================================\\n\\nThis custom step queries a Chroma vector database collection and writes results to a SAS Cloud Analytics Services (CAS) table.\\n\\nVector databases facilitate Generative AI and other applications, notably providing context to a Large Language Model (LLM).  Examples of other applications include recommendation engines, similarity search and time series forecasting. \\n\\nChroma is an open-source vector database used in Generative AI pipelines.  It shares similar constructs and concepts with other vector store offerings. \",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section8\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Prerequisites\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text4\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Python packages to be installed:\\n\\n1. Langchain\\n2. ChromaDB\\n3.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section6\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Assumptions \",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1.  Chroma DB follows client / server architecture.  This step implicitly considers the client and server to be on the same machine (see comments in code).  Users are free to modify the step for persistent, remote/external, or alternatively orchestrated (e.g. Docker container) servers based on their requirement.  Chroma DB documentation provides some examples (refer Documentation).\\n\\n2. Embeddings are assumed to be created with SAS Visual Text Analytics (VTA) for this version of the step.  This step requires a SAS Visual Text Analytics (VTA) license.    \\n\\n3.  This custom step runs on data loaded to a SAS Cloud Analytics Services (CAS) library (known as a caslib). Ensure you are connected to CAS before running this step.  Also, ensure that your output caslib destination is writeable.\\n\\n4.  Proc Python is required.  Required Python packages are listed in prerequisites section.  Also, consider build and install of  Python and required packages through the SAS Configurator for Open Source.\\n\\n5.  This custom step provides embeddings to Chroma at the time of query and does not use Chroma's embedding function.  Embedding function support will be considered in future. \",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section7\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Prerequisites\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. A SAS Viya 4 environment version 2023.12 or later.\\n\\n2. Python packages to be installed:\\n\\n   i.   chromadb\\n   ii.  pysqlite-binary\\n   iii. pandas\\n   iv. swat\\n\\n3. Suggested Python version is 3.10.x due to dependency on sqlite version >= 3.35.0 (refer documentation).  However, a workaround suggested by Chroma has been followed in the code.\\n\\n4. Optional components, based on site-specific architecture, are to have a separate Chroma DB server for persistence and scale.  Refer Chroma documentation for details.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_input\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input parameters\",\n\t\t\t\t\t\t\t\"open\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"input_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Name of Chroma DB collection(text field, required): provide the name of the Chroma DB collection you might have populated earlier.  You can't query a collection if you don't know the name for the same.\\n\\n2. Query source (drop-down list, frozen): currently set at \\\"Input table\\\" for this version.  Other options will be examined in future releases.\\n\\n3  Input table containing a text column (input port, required): attach a CAS table to this port. \\n\\n4. Query column (column selector, required, maximum 1): select a text column which contains the query you wish to pass to the database.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_output_specs\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output specifications\",\n\t\t\t\t\t\t\t\"open\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Number of results (numeric stepper): provide the number of results you wish to have returned for each observation of the query column. \\n\\n2. Output table (output port, required): attach a CAS table to the output port of this node to hold results.\\n\\n3. Promote (check box): check this box if you wish to have the output table promoted to global scope (and be available beyond the SAS Studio session)\\n\\nUpon successful completion, the output table will contain the query, the id of the result documents, distance measure and the document content.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_config_1\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Configuration \",\n\t\t\t\t\t\t\t\"open\": 1,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"output_parameters_text_1\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Embedding model caslib (text field, required):  provide the caslib containing a VTA embedding model which will be applied to the query in order to generate embeddings.\\n\\n2. Embedding model astore name (text field, required): provide the name of a VTA astore model to generate embeddings on the query text. \\n\\n------------------------------------------------------------------\\nFollow this process to obtain the above values:\\n\\n(i) In Model Studio, right click on the topics node you used to create an embeddings model.  Select Results\\n(ii) In the score code portion of the results, locate and copy the values of the following macro variables: input_astore_caslib_name & input_astore_name.  Use in the above two fields.\\n(iii) Some users may choose to develop embedding models programmatically.  They would have specified an astore name and caslib while doing so, which can be used for above fields.\\n------------------------------------------------------------------\\n\\n3. Embedding pattern (text column, required, default of _Col):  document embeddings tend to be long series involving 100s or sometimes 1000s of columns.  Provide a text pattern which applies to all embedding column names. For example,  _Col represents _Col_1, _Col_2..... _Col_n.  A default of _Col is provided since this happens to be the default value for Visual Text Analytics-generated embeddings.\\n\\n4. Location for Chroma database (folder selector, required): select a location where the Chroma database is persisted.  Note this needs to be on the filesystem (SAS Server) and not SAS Content.  \\n\\n5. CAS server (text field, default entered): change this only if you need a CAS server name different from a typical Viya 4 installation.\\n\\n6. CAS port (numeric field, default entered): change this only if you know that the CAS server runs on a different port than the default.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_runtimecontrol\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Run-time Control\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"runtimecontrol_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Note: Run-time control is optional.  You may choose whether to execute the main code of this step or not, based on upstream conditions set by earlier SAS programs.  This includes nodes run prior to this custom step earlier in a SAS Studio Flow, or a previous program in the same session.\\n\\nRefer this blog (https://communities.sas.com/t5/SAS-Communities-Library/Switch-on-switch-off-run-time-control-of-SAS-Studio-Custom-Steps/ta-p/885526) for more details on the concept.\\n\\nThe following macro variable,\\n\\n_qcd_run_trigger\\n\\nwill initialize with a value of 1 by default, indicating an \\\"enabled\\\" status and allowing the custom step to run.\\n\\nIf you wish to control execution of this custom step, include code in an upstream SAS program to set this variable to 0.  This \\\"disables\\\" execution of the custom step.\\n\\nTo \\\"disable\\\" this step, run the following code upstream:\\n\\n%global _qcd_run_trigger;\\n%let _qcd_run_trigger =0;\\n\\nTo \\\"enable\\\" this step again, run the following (it's assumed that this has already been set as a global variable):\\n\\n%let _qcd_run_trigger =1;\\n\\nIMPORTANT: Be aware that disabling this step means that none of its main execution code will run, and any  downstream code which was dependent on this code may fail.  Change this setting only if it aligns with the objective of your SAS Studio program.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"1. Documentation for the chromadb Python package: https://docs.trychroma.com\\n\\n2. An important note regarding sqlite: https://docs.trychroma.com/troubleshooting#sqlite\\n\\n3. SAS Communities article on configuring Viya for Python integration: https://communities.sas.com/t5/SAS-Communities-Library/Configuring-SAS-Viya-for-Python-Integration/ta-p/847459\\n\\n4. The SAS Viya Platform Deployment Guide (refer to SAS Configurator for Open Source within): https://go.documentation.sas.com/doc/en/itopscdc/default/itopssr/p1n66p7u2cm8fjn13yeggzbxcqqg.htm?fromDefault=#p19cpvrrjw3lurn135ih46tjm7oi \\n\\n5.  Options for persistent clients and client connections in Chroma: https://docs.trychroma.com/usage-guide\\n\\n6.  Every custom step is a learning opportunity for SAS programming!  I revisited the venerable but still powerful DATALINES (DATALINES4) statement and it proved helpful in negotiating a design challenge in the SAS program.  Documentation: https://go.documentation.sas.com/doc/en/pgmsascdc/default/lestmtsref/p1mm9b070wj962n16q0v1d9uku5q.htm\\n\\n7. Documentation for the Analytic Store Scoring action set: https://go.documentation.sas.com/doc/en/pgmsascdc/default/casactml/casactml_astore_toc.htm \\n\\n8. SAS Communities article on connecting to CAS using the SWAT package in SAS Studio: https://communities.sas.com/t5/SAS-Communities-Library/Hotwire-your-SWAT-inside-SAS-Studio/ta-p/835956\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"version_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.0  (30JAN2024)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Created/contact: \\n\\n- Sundaresh Sankaran (sundaresh.sankaran@sas.com)\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"folder_or_file_selector\": {\n\t\t\t\"value\": \"folder\",\n\t\t\t\"label\": \"Select a Folder\"\n\t\t},\n\t\t\"answerBankFile\": \"\",\n\t\t\"answerBankFolder\": \"\",\n\t\t\"questionText\": \"\",\n\t\t\"embeddingModel\": {\n\t\t\t\"value\": \"text-embedding-3-small\"\n\t\t},\n\t\t\"persistentPathName\": \"\",\n\t\t\"collectionName\": \"\",\n\t\t\"genModel\": {\n\t\t\t\"value\": \"gpt-35-turbo\"\n\t\t},\n\t\t\"azureKeyLocation\": \"\",\n\t\t\"azureOpenAIEndpoint\": \"https://sahaquopenai.openai.azure.com/\",\n\t\t\"azureRegion\": \"\"\n\t}\n}","templates":{"SAS":"/* SAS templated code goes here */\n\n\n/*-----------------------------------------------------------------------------------------*\n   START MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n\n/* -------------------------------------------------------------------------------------------* \n   Macro to initialize a run-time trigger global macro variable to run SAS Studio Custom Steps. \n   A value of 1 (the default) enables this custom step to run.  A value of 0 (provided by \n   upstream code) sets this to disabled.\n\n   Input:\n   1. triggerName: The name of the runtime trigger you wish to create. Ensure you provide a \n      unique value to this parameter since it will be declared as a global variable.\n\n   Output:\n   2. &triggerName : A global variable which takes the name provided to triggerName.\n   \n   Also available at:\n   https://github.com/SundareshSankaran/sas_utility_programs/blob/main/code/Create_Run_Time_Trigger/macro_create_runtime_trigger.sas\n*-------------------------------------------------------------------------------------------- */\n\n%macro _create_runtime_trigger(triggerName);\n\n   %global &triggerName.;\n\n   %if %sysevalf(%superq(&triggerName.)=, boolean)  %then %do;\n  \n      %put NOTE: Trigger macro variable &triggerName. does not exist. Creating it now.;\n      %let &triggerName.=1;\n\n   %end;\n\n%mend _create_runtime_trigger;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to create an error flag for capture during code execution.\n\n   Input:\n      1. errorFlagName: The name of the error flag you wish to create. Ensure you provide a \n         unique value to this parameter since it will be declared as a global variable.\n      2. errorFlagDesc: The name of an error flag description variable to hold the error \n         description.\n\n    Output:\n      1. &errorFlagName : A global variable which takes the name provided to errorFlagName.\n      2. &errorFlagDesc : A global variable which takes the name provided to errorFlagDesc.\n\n   Also available at: \n   https://github.com/SundareshSankaran/sas_utility_programs/blob/main/code/Error%20Flag%20Creation/macro_create_error_flag.sas\n*------------------------------------------------------------------------------------------ */\n\n%macro _create_error_flag(errorFlagName, errorFlagDesc);\n\n   %global &errorFlagName.;\n   %let  &errorFlagName.=0;\n\n   %global &errorFlagDesc.;\n   %let  &errorFlagDesc.=0;\n\n%mend _create_error_flag;\n\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to identify whether a given folder location provided from a \n   SAS Studio Custom Step folder selector happens to be a SAS Content folder\n   or a folder on the filesystem (SAS Server).\n\n   Input:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Output:\n   1. _path_identifier: Set inside macro, a global variable indicating the prefix of the \n      path provided.\n\n   Also available at: https://raw.githubusercontent.com/SundareshSankaran/sas_utility_programs/main/code/Identify%20SAS%20Content%20or%20Server/macro_identify_sas_content_server.sas\n\n*------------------------------------------------------------------------------------------ */\n\n%macro _identify_content_or_server(pathReference);\n   %global _path_identifier;\n   data _null_;\n      call symput(\"_path_identifier\", scan(\"&pathReference.\",1,\":\",\"MO\"));\n   run;\n   %put NOTE: _path_identifier is &_path_identifier. ;\n%mend _identify_content_or_server;\n\n\n/* -----------------------------------------------------------------------------------------* \n   Macro to extract the path provided from a SAS Studio Custom Step file or folder selector.\n\n   Input:\n   1. pathReference: A path reference provided by the file or folder selector control in \n      a SAS Studio Custom step.\n\n   Output:\n   1. _sas_folder_path: Set inside macro, a global variable containing the path.\n\n   Also available at: https://raw.githubusercontent.com/SundareshSankaran/sas_utility_programs/main/code/Extract%20SAS%20Folder%20Path/macro_extract_sas_folder_path.sas\n\n*------------------------------------------------------------------------------------------ */\n%macro _extract_sas_folder_path(pathReference);\n   %global _sas_folder_path;\n   data _null_;\n      call symput(\"_sas_folder_path\", scan(\"&pathReference.\",2,\":\",\"MO\"));\n   run;\n%mend _extract_sas_folder_path;\n\n\n/* ------------------------------------------------------------------------------------------------* \n   Macro to check whether a path to Python is available to a compute \n   session where this program runs.  Detailed macro available at \n   https://github.com/SundareshSankaran/sas_utility_programs/blob/main/code/Check_For_Python/macro_python_check.sas\n\n   Sundaresh Sankaran, 20FEB2024\n*----------------------------------------------------------------------------------------------------- */\n\n/* ----------------------------------------------------------------------------------------------* \n   This macro carries out the check in a Compute server.  If you already know you are running this \n   code in a Compute server session, you can call the %_env_check_python_compute macro directly.\n*----------------------------------------------------------------------------------------------- */\n\n%macro _env_check_python_compute(errorFlagName, errorFlagDesc);\n\n   data _null_;\n      /* ----------------------------------------------------------------------------------------------* \n         Obtain system options and store them inside macro variables.\n         Note: if the environment variable does not exist, sysget throws a NOTE with _ERROR_ populated.\n      *----------------------------------------------------------------------------------------------- */\n      proc_pypath = sysget('PROC_PYPATH');\n      viya_lockdown_user_methods = sysget('VIYA_LOCKDOWN_USER_METHODS');\n      compute_enable = sysget('COMPUTESERVER_LOCKDOWN_ENABLE');\n      does_file_at_pypath_exist=fileexist(proc_pypath);\n\n      /* ----------------------------------------------------------------------------------------------* \n         Let's start from the end\n         Check if PROC_PYPATH exists\n      *----------------------------------------------------------------------------------------------- */\n\n      if proc_pypath = \"\" then do;\n         call symputx(&errorFlagName.,1);\n         call symput(&errorFlagDesc., \"PROC_PYPATH environment variable not populated, indicating that Python may not have been configured.\");\n      end;\n      else do;\n         /* -------------------------------------------------------------------------------------------* \n            Check if PROC_PYPATH points to a valid file\n         *-------------------------------------------------------------------------------------------- */\n         if does_file_at_pypath_exist = 0 then do;\n            call symputx(&errorFlagName.,1);\n            call symput(&errorFlagDesc., \"The file referred by PROC_PYPATH does not exist, indicating path to Python may have been configured incorrectly.\");             \n         end;\n         else do;\n            /* -----------------------------------------------------------------------------------------* \n               Check if COMPUTESERVER_LOCKDOWN_ENABLE = 0, indicating a permissive (and potentially \n               insecure) environment.\n            *------------------------------------------------------------------------------------------ */\n            if compute_enable = '1' then do;\n               /* --------------------------------------------------------------------------------------* \n                  Check if PYTHON and SOCKET appear in viya_lockdown_user_methods.\n                  There's an additional PYTHON_EMBED option which is included as a strict check (enabling \n                  Python to run in a submit block).\n               *--------------------------------------------------------------------------------------- */\n               if index(lowcase(viya_lockdown_user_methods),\"python\") > 0 and index(lowcase(viya_lockdown_user_methods),\"socket\") > 0 and index(lowcase(viya_lockdown_user_methods),\"python_embed\") > 0 then do;\n                  call symput(\"PROC_PYPATH\", proc_pypath);\n                  call symputx(&errorFlagName.,0);\n                  call symput(&errorFlagDesc., \"A path to Python is available in this compute session and Python use is part of Viya enabled methods.\") ;\n               end;\n               else do;\n                  call symputx(&errorFlagName.,1);\n                  call symput(&errorFlagDesc., \"Required access methods to run Python don't seem to form part of the user methods allowed in Viya. Please take steps to enable PYTHON, PYTHON_EMBED and SOCKET\");             \n               end;\n            end;\n            else do;\n               call symput(\"PROC_PYPATH\", proc_pypath);\n               call symputx(&errorFlagName.,0);\n               call symput(&errorFlagDesc., \"A path to Python is available in this compute session and COMPUTESERVER_LOCKDOWN_ENABLE is disabled. While you can run Python, note that setting COMPUTESERVER_LOCKDOWN_ENABLE to 0 is not recommended.\");\n            end;\n         end;\n      end;\n   run;\n%mend _env_check_python_compute;\n\n\n/*-----------------------------------------------------------------------------------------*\n   EXECUTION CODE MACRO (FOR PREFLIGHT ACTIVITIES ONLY)\n   Note that due to the limitation of proc cas externalsource statements operating within \n   a macro, this macro is called along with additional execution code.\n*------------------------------------------------------------------------------------------*/\n\n%macro _ragdqa_pf_execution_code;\n\n\n/*-----------------------------------------------------------------------------------------*\n   Create an error flag. \n*------------------------------------------------------------------------------------------*/\n\n   %_create_error_flag(_ragdqa_error_flag, _ragdqa_error_desc);\n\n%put NOTE: Error flag created;\n\n/*-----------------------------------------------------------------------------------------*\n   Check if Python's available in the environment. \n*------------------------------------------------------------------------------------------*/\n\n   %_env_check_python_compute(\"_ragdqa_error_flag\",\"_ragdqa_error_desc\");\n\n   %if &_ragdqa_error_flag.=1 %then %do;\n      %put ERROR: &_ragdqa_error_desc. ;\n   %end;\n\n%put NOTE: Python check complete;\n/*-----------------------------------------------------------------------------------------*\n   Check if path for Chroma DB provided happens to be a filesystem (SAS Server) or SAS \n   Content path. Prior to that, insert /tmp as a placeholder in case this field has not \n   been entered.\n*------------------------------------------------------------------------------------------*/\n\n   %if &_ragdqa_error_flag. = 0 %then %do;\n\n      %if \"&persistentPathName.\"=\"\" %then %do;\n         %let persistentPathName=sasserver:/tmp;\n      %end;\n      %else %do;\n         %_identify_content_or_server(&persistentPathName.);\n         %if \"&_path_identifier.\"=\"sasserver\" %then %do;\n            %put NOTE: Folder location prefixed with &_path_identifier. is on the SAS Server.;\n         %end;\n         %else %do;\n            %let _ragdqa_error_flag=1;\n            %put ERROR: Please select a valid folder on the SAS Server for persisting the database. ;\n         %end;\n      %end;\n\n   %end;\n\n   %if &_ragdqa_error_flag. = 0 %then %do;\n      %global answerPath;\n      %if \"&folder_or_file_selector.\" = \"file\" %then %do;\n         %let answerPath = &answerBankFile.;\n      %end;\n      %else %do;\n         %let answerPath = &answerBankFolder.;\n      %end;\n   %end;\n\n   %if &_ragdqa_error_flag. = 0 %then %do;\n\n      %if \"&answerPath.\"=\"\" %then %do;\n         %let _ragdqa_error_flag=1;\n         %put ERROR: Please select a valid file or folder containing your answer bank. ;\n      %end;\n      %else %do;\n         %_identify_content_or_server(&answerPath.);\n         %if \"&_path_identifier.\"=\"sasserver\" %then %do;\n            %put NOTE: Folder location prefixed with &_path_identifier. is on the SAS Server.;\n         %end;\n         %else %do;\n            %let _ragdqa_error_flag=1;\n            %put ERROR: Please select a valid folder on the SAS Server for persisting the database. ;\n         %end;\n      %end;\n\n   %end;\n\n/*    %if &_ragdqa_error_flag. = 0 %then %do;\t */\n      %_extract_sas_folder_path(&answerPath.);\n\t\n/*    %end; */\n    %global _data_location;\n    %let _data_location=&_sas_folder_path;\n\n    %_extract_sas_folder_path(&persistentPathName.);\n\n%global _chroma_location;\n%let _chroma_location=&_sas_folder_path;\n\n%put &=_chroma_location;\n\n\n\n    %_extract_sas_folder_path(&azureKeyLocation.);\n\n\n%global _key_location;\n%let _key_location=&_sas_folder_path;\n\n\ndata _null_;\ninfile \"&_key_location.\" lrecl=1000;\ninput @;\ncall symput(\"AZURE_OPENAI_KEY\",_INFILE_);\nrun;\n \n%put NOTE: &AZURE_OPENAI_KEY.;\n\n\n%mend _ragdqa_pf_execution_code;\n\n\n\n\n%put &=folder_or_file_selector;\n\n%_ragdqa_pf_execution_code;\n\n%put &=answerPath;\n%put &=_path_identifier;\n\n%put &=_sas_folder_path;\n\n\n\n   \nproc python;\nsubmit;\n\n#############################################################################################\n#\n#  The pysqlite3 import allows for the code to also run in (some) older Python (or sqlite) versions.\n#\n#############################################################################################\n__import__('pysqlite3')\nimport sys\nsys.modules['sqlite3'] = sys.modules.pop('pysqlite3')\n\n\n\nfrom langchain.document_loaders import DirectoryLoader\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\nfrom langchain.schema import Document\nfrom langchain.embeddings import OpenAIEmbeddings\nfrom langchain.vectorstores.chroma import Chroma\nfrom langchain.prompts import ChatPromptTemplate\n#from langchain_community.chat_models import ChatOpenAI\nfrom langchain_openai import AzureOpenAIEmbeddings\nfrom langchain_openai import AzureOpenAI\nfrom langchain_community.document_loaders import PyPDFLoader\nimport os\nimport shutil\nimport chromadb\nimport json\nimport os\n\nos.environ['ANONYMIZED_TELEMETRY'] = \"False\"\n\nDATA_PATH=SAS.symget('_data_location')\nCHROMA_PATH=SAS.symget('_chroma_location')\n\nSAS.logMessage(CHROMA_PATH)\n\nchroma_client = chromadb.PersistentClient(path=CHROMA_PATH)\ncollection_name      =  SAS.symget(\"collectionName\")\n\n\n\n\nos.environ[\"AZURE_OPENAI_API_KEY\"]= SAS.symget('AZURE_OPENAI_KEY')\nos.environ[\"AZURE_OPENAI_ENDPOINT\"]= SAS.symget('azureOpenAIEndpoint')\nos.environ[\"OPENAI_API_VERSION\"] = \"2023-12-01-preview\"\n\nSAS.logMessage(os.environ[\"AZURE_OPENAI_API_KEY\"])\n\nSAS.logMessage(os.environ[\"AZURE_OPENAI_ENDPOINT\"])\n\nSAS.logMessage(os.environ[\"OPENAI_API_VERSION\"])\n\n\ndef load_documents(isFolder):\n    SAS.logMessage(DATA_PATH)\n    if isFolder==\"folder\":\n        loader = DirectoryLoader(DATA_PATH,glob=\"*.pdf\",loader_cls=PyPDFLoader)\n    else:\n        loader=PyPDFLoader(DATA_PATH)\n    documents=loader.load_and_split()\n    return documents\n\n\n\ndef save_to_chroma(chunks: list[Document]):\n    # Define a new embedding function\n    embedding_method= AzureOpenAIEmbeddings(\n    azure_deployment=\"text-embedding-sh\",\n    openai_api_version=\"2023-05-15\",\n)\n    db = Chroma.from_documents(\n        documents = chunks,embedding = embedding_method, client = chroma_client, collection_name = collection_name, persist_directory=CHROMA_PATH\n    )\n    db.persist()\n    print(f\"Saved {len(chunks)} chunks to {CHROMA_PATH}.\")\n\n\ndoc = load_documents(SAS.symget('folder_or_file_selector'))\ntext_splitter = RecursiveCharacterTextSplitter(\n    chunk_size=1000,\n    chunk_overlap=500,\n    length_function=len,\n    add_start_index=True\n    )\nchunks=text_splitter.split_documents(doc)\nprint(\"we are here\")\n\n\n\nsave_to_chroma(chunks)\nprint(f\"Saved {len(chunks)} chunks to {CHROMA_PATH}.\")\n\n\nquery_text=SAS.symget('questionText')\n\nembedding_function = AzureOpenAIEmbeddings(\n    azure_deployment=\"text-embedding-sh\",\n    openai_api_version=\"2023-05-15\",\n)\n\ndb = Chroma(persist_directory=CHROMA_PATH, embedding_function=embedding_function,collection_name=collection_name)\n\nresults = db.similarity_search_with_relevance_scores(query_text, k=3)\n\nPROMPT_TEMPLATE = \"\"\"\nAnswer the question based only on the following context:\n\n{context}\n\n---\n\nAnswer the question based on the above context: {question}\n\"\"\"\n\n\ncontext_text = \"\\n\\n---\\n\\n\".join([doc.page_content for doc, _score in results])\nprompt_template = ChatPromptTemplate.from_template(PROMPT_TEMPLATE)\nprompt = prompt_template.format(context=context_text, question=query_text)\n\n\nfrom langchain_openai import AzureChatOpenAI\nmodel = model = AzureChatOpenAI(\n    openai_api_version=\"2023-05-15\",\n    azure_deployment=\"gpt-35-trubo-sh\",\n)\nresponse_text = model.predict(prompt)\n\n\nsources = [doc.metadata.get(\"source\", None) for doc, _score in results]\nformatted_response = f\"Response: {response_text}\\nSources: {sources}\"\nprint(formatted_response)\nSAS.symput('responsevar',response_text)\n\nendsubmit;\nrun;\n\n\nfilename rwiOut \".\";\nods html close;\nods html path=rwiOut file=\"UnformatText.html\";\n\ntitle \"&questionText\";\ndata _null_;\ndcl odsout obj();\n\n\n   obj.format_text(data: \" %bquote(&responsevar) \"); \n   \nrun;\nods html close;\nods html; /* Not required in SAS Studio */\n\n\n/*-----------------------------------------------------------------------------------------*\n   Clean up existing macro variables and macro definitions.\n*------------------------------------------------------------------------------------------*/\n%if %symexist(answerPath) %then %do;\n   %symdel answerPath;\n%end;\n\n\n\n\n"}}